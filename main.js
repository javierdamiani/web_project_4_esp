!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===e(n)?n:String(n)}var r=document.querySelector("#cardTemplate"),o=function(){function e(t,r){var o,i,u,a=this,c=t.data,l=t.handleCardClick,s=t.handleDeleteClick,f=t.handleLikeAdd,p=t.handleLikeDelete,y=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=this,u=function(e){return a._likesArray=e,a._likesArray},(i=n(i="updateLikes"))in o?Object.defineProperty(o,i,{value:u,enumerable:!0,configurable:!0,writable:!0}):o[i]=u,this._name=c.name,this._link=c.link,this._template=r,this._id=c._id,this._likesArray=c.likes,this._cardLikes=this._likesArray.length,this._ownerId=c.owner._id,this._user=y,this._handleCardClick=l,this._handleDeleteClick=s,this._handleLikeAdd=f,this._handleLikeDelete=p,this._element=this._getTemplate(),this._heartButton=this._element.querySelector("#likeBtn"),this._heartNumber=this._element.querySelector("#heartCounter"),this._cardImage=this._element.querySelector("#cardImg"),this._cardTitle=this._element.querySelector("#cardTitle")}var o,i;return o=e,(i=[{key:"_getTemplate",value:function(){return r.cloneNode(!0).content.querySelector("#cities")}},{key:"addHeart",value:function(){this._heartButton.classList.add("elements__template_element-button_active"),this._heartNumber.textContent=this._likesArray.length}},{key:"removeHeart",value:function(){this._heartButton.classList.remove("elements__template_element-button_active"),this._heartNumber.textContent=this._likesArray.length,0===this._cardLikes&&(this._heartNumber.textContent="")}},{key:"_deleteButton",value:function(){this._element.querySelector("#trashCan").closest(".elements__template_element").remove()}},{key:"_setEventListeners",value:function(){var e=this;this._heartButton.addEventListener("click",(function(){e._likesArray.some((function(t){return t._id===e._user}))?e._handleLikeDelete({id:e._id}):e._handleLikeAdd({id:e._id})})),this._element.querySelector("#trashCan").addEventListener("click",(function(){e._handleDeleteClick({id:e._id})})),this._cardImage.addEventListener("click",(function(){e._handleCardClick({name:e._name,link:e._link})})),this._ownerId!==this._user&&this._element.querySelector("#trashCan").remove()}},{key:"generateCard",value:function(){var e=this;this._setEventListeners(),this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.setAttribute("alt",this._name),this._heartNumber.textContent=this._cardLikes?this._cardLikes:"";var t=this._likesArray.some((function(t){return t._id===e._user}));return this._heartButton.classList.toggle("elements__template_element-button_active",t),this._element}}])&&t(o.prototype,i),Object.defineProperty(o,"prototype",{writable:!1}),e}(),i=document.querySelector("#profName"),u=document.querySelector("#profAbout"),a=document.querySelector("#popupName"),c=document.querySelector("#popupAbout"),l=document.querySelector("#editButton"),s=document.querySelector(".popup__button_type_edit"),f=document.querySelector(".profile__avatar"),p=document.querySelector(".profile__avatar-overlay"),y=document.querySelector("#editImageForm"),m=document.querySelector("#addImg"),d=(document.querySelector("#title"),document.querySelector("#linkImg"),document.querySelector(".popup__form")),h=document.querySelector("#placeForm"),v=document.querySelector("#btnCreate"),b=document.querySelector("#btnImageEdit"),_=document.querySelector("#btnDelete"),g={formSelector:".popup__form",inputSelector:".popup__input ",submitButtonSelector:".popup__button",inactiveButtonClass:"button_inactive",inputErrorClass:"popup__error",errorClass:"popup__error_visible"};function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,w(r.key),r)}}function E(e,t,n){return(t=w(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function w(e){var t=function(e,t){if("object"!==S(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===S(t)?t:String(t)}var L=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),E(this,"_hasInvalidInput",(function(e){return e.some((function(e){return!e.validity.valid}))})),E(this,"_setEventListeners",(function(){r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r._toggleButtonState()}))}))})),E(this,"enableValidation",(function(){r._formElement.addEventListener("submit",(function(e){e.preventDefault()})),r._setEventListeners()})),this._formElement=t,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this.errorClass),e.classList.add(this.inputErrorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this.inputErrorClass),t.classList.remove(this.errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?this._setButtonState(!0,this._inactiveButtonClass):this._setButtonState(!1,this._inactiveButtonClass)}},{key:"_setButtonState",value:function(e,t){this._buttonElement.disabled=e,e?this._buttonElement.classList.add(t):this._buttonElement.classList.remove(t)}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t),t.value=""}))}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==O(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}var j=function(){function e(t,n){var r=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderer",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"addCards",value:function(e){this._container.append(e)}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==P(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==P(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===P(o)?o:String(o)),r)}var o}var I=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popUpElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popUpElement.classList.add("popup__opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popUpElement.classList.remove("popup__opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_clickOutside",value:function(e){return e.target.classList.contains("popup")||e.target.classList.contains("popup__close")||e.target.classList.contains("popup__close-button")||e.target.classList.contains("popup__img-close")||e.target.classList.contains("popup__img")}},{key:"setEventListeners",value:function(){var e=this;this._popUpElement.addEventListener("click",(function(t){e._clickOutside(t)&&e.close()}))}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==T(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==T(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===T(o)?o:String(o)),r)}var o}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},B.apply(this,arguments)}function U(e,t){return U=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},U(e,t)}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&U(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(r);if(o){var n=A(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===T(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._inputList=r._popUpElement.querySelectorAll(".popup__input"),r._formElement=r._popUpElement.querySelector(".popup__form"),r._submitButton=n,r._handleFormSubmit=t,r}return t=u,(n=[{key:"close",value:function(){B(A(u.prototype),"close",this).call(this),this._formElement.reset()}},{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),console.log(this._formValues),this._formValues}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Guardando...":""}},{key:"setEventListeners",value:function(){var e=this;B(A(u.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e.renderLoading(!0),e._handleFormSubmit(e._getInputValues())}))}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(I);function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==D(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===D(o)?o:String(o)),r)}var o}function V(){return V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=F(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},V.apply(this,arguments)}function J(e,t){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},J(e,t)}function F(e){return F=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},F(e)}var H=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&J(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=F(r);if(o){var n=F(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===D(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._title=t._popUpElement.querySelector(".popup__img-title"),t._image=t._popUpElement.querySelector(".popup__img-background"),t}return t=u,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;V(F(u.prototype),"open",this).call(this),this._title.textContent=t,this._image.src=n,this._image.setAttribute("alt",t)}}])&&N(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(I);function G(e){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},G(e)}function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==G(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==G(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===G(o)?o:String(o)),r)}var o}var z=function(){function e(t){var n=t.userName,r=t.userJob,o=t.userAvatar,i=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=n,this._userJob=r,this._userId=i,this._userAvatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._userName.textContent,userJob:this._userJob.textContent}}},{key:"setUserInfo",value:function(e){e.userName,e.userJob,this._userName.textContent=e.userName,this._userJob.textContent=e.userJob}},{key:"setUserAvatar",value:function(e){this._userAvatar.src=e}}])&&M(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function K(e){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},K(e)}function Q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==K(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==K(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===K(o)?o:String(o)),r)}var o}var W=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_handleResponse",value:function(e){if(!e.ok)throw new Error("Error: ".concat(e.status));return e.json()}},{key:"_makeRequest",value:function(e,t,n){var r=this;return fetch(t,{method:e,headers:this._headers,body:n?JSON.stringify(n):void 0}).then((function(e){return r._handleResponse(e)}))}},{key:"getCardList",value:function(){return this._makeRequest("GET","".concat(this._baseUrl,"/cards"))}},{key:"getUserInfo",value:function(){return this._makeRequest("GET","".concat(this._baseUrl,"/users/me"))}},{key:"handleEditProfile",value:function(e){var t=e.name,n=e.about;return this._makeRequest("PATCH","".concat(this._baseUrl,"/users/me"),{name:t,about:n})}},{key:"addCard",value:function(e){var t=e.name,n=e.link;return this._makeRequest("POST","".concat(this._baseUrl,"/cards"),{name:t,link:n})}},{key:"removeCard",value:function(e){return this._makeRequest("DELETE","".concat(this._baseUrl,"/cards/").concat(e))}},{key:"setUserAvatar",value:function(e){return this._makeRequest("PATCH","".concat(this._baseUrl,"/users/me/avatar"),{avatar:e})}},{key:"addLike",value:function(e){return this._makeRequest("PUT","".concat(this._baseUrl,"/cards/likes/").concat(e))}},{key:"removeLike",value:function(e){return this._makeRequest("DELETE","".concat(this._baseUrl,"/cards/likes/").concat(e))}}])&&Q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function X(e){return X="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},X(e)}function Y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==X(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==X(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===X(o)?o:String(o)),r)}var o}function Z(){return Z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=ee(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},Z.apply(this,arguments)}function $(e,t){return $=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},$(e,t)}function ee(e){return ee=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ee(e)}var te=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&$(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ee(r);if(o){var n=ee(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===X(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t,n=e.popUpSelector,r=e.handleFormSubmit,o=e.submitButton;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n))._handleFormSubmit=r,t._submitButton=o,t}return t=u,(n=[{key:"close",value:function(){Z(ee(u.prototype),"close",this).call(this),this.renderLoading(!1)}},{key:"setSubmitAction",value:function(e){this._handleFormSubmit=e}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Borrando...":"Sí"}},{key:"setEventListeners",value:function(){var e=this;Z(ee(u.prototype),"setEventListeners",this).call(this),this._popUpElement.querySelector(".popup__button").addEventListener("click",(function(t){t.preventDefault(),e.renderLoading(!0),e._handleFormSubmit()}))}}])&&Y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(I),ne=new W({baseUrl:"https://around.nomoreparties.co/v1/web_es_cohort_03",headers:{authorization:"278fd53d-b84a-49c6-aef1-178b52806850","Content-Type":"application/json"}}),re=new L(d,g),oe=new L(h,g),ie=new L(y,g);re.enableValidation(),oe.enableValidation(),ie.enableValidation();var ue=new H("#modalPopUp");ue.setEventListeners();var ae=new x(".popup_type_profile",(function(e){ne.handleEditProfile(e).then((function(e){ne.getUserInfo().then((function(e){console.log(e),ce.setUserInfo({userName:e.name,userJob:e.about})})),ae.close()})).catch((function(e){return console.log(e)}))}),s);ae.setEventListeners();var ce=new z({userName:i,userJob:u,userAvatar:f});l.addEventListener("click",(function(){ae.open(),re.resetValidation();var e=ce.getUserInfo();a.value=e.userName,c.value=e.userJob})),ne.getUserInfo().then((function(e){ce.setUserInfo({userName:e.name,userJob:e.about}),ce.setUserAvatar(e.avatar),ce.userId=e._id})).then((function(){ne.getCardList().then((function(e){var t=new j({data:e,renderer:function(e){var n=fe(e);t.addCards(n)}},".elements");t.renderer();var n=new x(".popup_type_card",(function(e){ne.addCard({name:e.title,link:e["image-link"]}).then((function(e){var r=fe(e);t.addItem(r),n.close()})).catch((function(e){return console.log(e)}))}),v);n.setEventListeners(),m.addEventListener("click",(function(){n.open(),oe.resetValidation()}))})).catch((function(e){return console.log(e)}))})).catch((function(e){return console.log(e)}));var le=new x(".popup_image_profile",(function(e){var t=e["image-link"];ne.setUserAvatar(t).then((function(){ce.setUserAvatar(t),le.close()})).catch((function(e){return console.log(e)}))}),b);le.setEventListeners(),p.addEventListener("click",(function(){le.open(),ie.resetValidation()}));var se=new te({popUpSelector:"#deleteCard",submitButton:_});function fe(e){var t=new o({data:e,handleCardClick:function(e){var t=e.name,n=e.link;ue.open({name:t,link:n})},handleDeleteClick:function(e){var n=e.id;se.open(),se.setSubmitAction((function(){ne.removeCard(n).then((function(){se.close(),t._deleteButton()})).catch((function(e){return console.log(e)}))}))},handleLikeAdd:function(e){var n=e.id;ne.addLike(n).then((function(e){t.updateLikes(e.likes),t.addHeart()})).catch((function(e){return console.log(e)}))},handleLikeDelete:function(e){var n=e.id;ne.removeLike(n).then((function(e){t.updateLikes(e.likes),t.removeHeart()})).catch((function(e){return console.log(e)}))},userId:ce.userId},"#cardTemplate");return t.generateCard()}se.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,